apiVersion: apps/v1
kind: Deployment
metadata:
  name: sfu-rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sfu-rabbitmq
  template:
    metadata:
      labels:
        app: sfu-rabbitmq
    spec:
      volumes:
        - name: rabbitmq-config
          configMap:
            name: rabbitmq-config
        - name: rabbitmq-logs
          hostPath:
            path: /var/log/rabbitmq
            type: DirectoryOrCreate
        - name: order-queue-logs
          hostPath:
            path: /var/log/order-queue
            type: DirectoryOrCreate
      initContainers:
        - name: init-rabbitmq-logs
          image: busybox
          command: ["sh", "-c", "mkdir -p /var/log/rabbitmq && touch /var/log/rabbitmq/rabbitmq.log"]
          volumeMounts:
            - name: rabbitmq-logs
              mountPath: /var/log/rabbitmq
        - name: init-order-queue-logs
          image: busybox
          command: ["sh", "-c", "mkdir -p /var/log/order-queue && touch /var/log/order-queue/order-queue.log"]
          volumeMounts:
            - name: order-queue-logs
              mountPath: /var/log/order-queue
      containers:
      - name: rabbitmq
        image: rabbitmq:management
        ports:
        - containerPort: 5672
        - containerPort: 15672
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "rabbitmqctl status || exit 1"
          initialDelaySeconds: 15
          periodSeconds: 10
        envFrom:
        - configMapRef:
            name: shopforyou-config
        volumeMounts:
          - name: rabbitmq-config
            mountPath: /etc/rabbitmq/rabbitmq.conf
            subPath: rabbitmq.conf
          - name: rabbitmq-logs
            mountPath: /var/log/rabbitmq
          - name: order-queue-logs
            mountPath: /var/log/order-queue
